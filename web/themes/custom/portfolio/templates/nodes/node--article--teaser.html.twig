{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 */
#}
<article class="flex flex-col overflow-hidden rounded-lg border bg-white">
    <!-- Image -->
    {% if content.field_image %}
        <a href="{{ url }}" class="group relative block h-48 overflow-hidden bg-gray-100 md:h-64">
            <img src="{{ file_url(content.field_image['#items'].entity.uri.value) }}"
                 alt="{{ content.field_image['#items'].alt }}"
                 class="absolute inset-0 h-full w-full object-cover object-center transition duration-200 group-hover:scale-110"
                 loading="lazy">
        </a>
    {% endif %}
    <!-- Content -->
    <div class="flex flex-1 flex-col p-4 sm:p-6">
        <!-- Title -->
        {% if label and not page %}
            <h2 class="mb-2 text-lg font-semibold text-gray-800">
                <a href="{{ url }}"
                   class="transition duration-100 hover:text-indigo-500 active:text-indigo-600">{{ label }}</a>
            </h2>
        {% endif %}
        <!-- Excerpt -->
        <p class="mb-8 text-gray-500">{{ content.body|render|striptags|slice(0, 250)|trim ~ '...' }} </p>

        <!-- Author info -->
        <div class="mt-auto flex items-end justify-between">
            <div class="flex items-center gap-2">
                <div class="h-10 w-10 shrink-0 overflow-hidden rounded-full bg-gray-100">

                           {{ author_picture }}

                </div>
                <div>
                    <span class="block text-indigo-500">{{ author_name }}</span>
                    {% if node.createdtime %}
                        <span class="block text-sm text-gray-400">{{ node.createdtime|format_date('custom', 'M / Y') }}</span>
                    {% endif %}
                </div>
            </div>
        <a href="{{ url }}">
            <span class="rounded border px-2 py-1 text-sm text-gray-500">Article</span>
        </a>

        </div>
    </div>
</article>

